// import create from "zustand";
// import moment from "moment";
// import { getLocation } from "../utils/getLocation";
// import { WeatherData } from "../types/type";

// import { fetchWeatherData, formatTime } from "../utils/fetcherData";

// interface WeatherState {
//   currentTime: moment.MomentInput;
//   location: Location | null;
//   weatherData: WeatherData | null;
//   setCurrentTime: (time: moment.MomentInput) => void;
//   setLocation: (loc: Location | null) => void;
//   setWeatherData: (data: WeatherData | null) => void;
//   fetchWeather: () => Promise<void>;
// }

// export const useWeatherStore = create<WeatherState>((set) => ({
//   currentTime: moment(),
//   location: null,
//   weatherData: null,
//   setCurrentTime: (time) => set({ currentTime: time }),
//   setLocation: (loc) => set({ location: loc }),
//   setWeatherData: (data) => set({ weatherData: data }),
//   fetchWeather: async () => {
//     const loc = await getLocation();
//     if (loc) {
//       set({ location: loc });
//       const weather = await fetchWeatherData(loc);
//       if (weather) {
//         set({ weatherData: weather });
//       }
//     }
//   },
// }));
